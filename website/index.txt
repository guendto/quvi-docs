include::shared/header.txt[]

[[news]]
News
----

2013-08-05::
  http://article.gmane.org/gmane.comp.web.flash.quvi/303[libquvi-scripts]
  v0.9.20130805 released

2013-08-04::
  http://article.gmane.org/gmane.comp.web.flash.quvi/301[libquvi-scripts]
  v0.4.17 released

2013-07-16::
  http://article.gmane.org/gmane.comp.web.flash.quvi/298[libquvi] v0.9.2
  and
  http://article.gmane.org/gmane.comp.web.flash.quvi/299[quvi] v0.9.3
  released

2013-06-19::
  http://article.gmane.org/gmane.comp.web.flash.quvi/277[quvi] v0.9.2
  and
  http://article.gmane.org/gmane.comp.web.flash.quvi/278[libquvi-scripts]
  v0.9.20130619 released

2013-06-18::
  'libquvi-scripts(7)' 0.4.16
  http://article.gmane.org/gmane.comp.web.flash.quvi/275[released]

[[overview]]
Overview
--------

=== In brief

The quvi project parses media stream URLs for Internet applications that
would otherwise have to use adobe flash multimedia platform to access
the media streams. The typical examples of this are the different media
hosts, such as YouTube, for videos that use this "multimedia platform"
to deliver their content.

[[pc]]
=== quvi project consists of

libquvi-scripts::
  The support scripts written in http://lua.org[Lua] that 'libquvi(3)'
  calls upon to parse the media stream properties

libquvi::
  The library with the C API for parsing the media stream properties

quvi::
  The silly command-line-tool suite to access the flash media stream
  properties

Overview: Questions and answers
-------------------------------

=== What is the quvi project?

* quvi is a workaround to access the media of the hosts that require
  adobe flash to access their content

* quvi, essentially, parses direct media stream URLs to access the media

* The project link:#pc[consists] of 'quvi', 'libquvi' and 'libquvi-scripts'

=== What is the purpose/goal of this project?
* To provide access to the hosted media without having to enable flash

=== Is the project an alternative to the flash?

In a way, yes: ::
  We are committed to provide an alternative method to access the hosted
  media _without having to enable the flash_.

quvi is: ::
  Really a workaround, not truly an alternative to the flash.

See https://en.wikipedia.org/wiki/Adobe_Flash#Alternatives[here] for: ::
  Alternatives that either, enable the flash technology, or are aimed to
  provide a complete platform alternative to this "multimedia platform".

=== How does the quvi project work?
* libquvi scripts parse and return the media properties for the media URLs
* libquvi returns these properties via the C API to the applications

=== What are the libquvi scripts?

* A selection of http://lua.org[Lua] scripts, designed to be easy to
  maintain and distribute

* 0.9+ extends the selection to additional script types, e.g. playlist
  and scan

=== How does quvi (the command) fit in all this?

* quvi(1) is a command-line-tool that provides CLI access to many of
  libquvi features

* 0.9+ integrates additional functions, e.g. quvi-get(1) and quvi-scan(1)

=== What else can quvi project be used for?

Some users are known to: ::
  Use quvi(1) to have parse the media stream URLs, and use the `--exec'
  option together with an external media player, e.g. mplayer, to stream
  the media from its source.
+
----
$ quvi dump -e "mplayer %u" MEDIA_URL   ;# 0.9+
$ quvi --exec="mplayer %u" MEDIA_URL    ;# 0.4
----

0.9+ extends the project features in many ways: ::
  As of 0.9+, the project can be used, for example, to parse playlist
  and scan URLs for embedded media URLs. The project parses many more
  media properties in addition to the media stream URLs.

=== Why not adobe flash?
* https://en.wikipedia.org/wiki/Adobe_Flash#Performance[Performance]
* https://en.wikipedia.org/wiki/Adobe_Flash#Availability_on_desktop_operating_systems[Platforms]
* https://en.wikipedia.org/wiki/Adobe_Flash#Flash_client_security[Security]

[[faq]]
=== Frequently asked questions

Additional FAQs (if the above didn't address your questions):

  * link:faq_general.html[FAQ: General questions/answers]
  * link:faq_library.html[FAQ: Questions/answers specific to libquvi]

[[li]]
=== License

include::shared/license.txt[]

[[status]]
=== Status

Current::
  0.4 is the current stable. 0.9 is the current unstable.

Long-term goals::
  Maintain the 0.4 series. Develop the 0.9 series which will ultimately
  graduate as the next stable (1.0) replacing the 0.4 series.

[[get]]
Get -- Official releases
------------------------

=== Stable (0.4)

The 0.4 is the 'current stable' series.  The series is now in the
'maintenance mode' -- the development has ceased -- and will only have
'maintenance releases' from time to time.

  * http://quvi.sf.net/latest?q=s,0.4[libquvi-scripts] --
      (http://quvi.sf.net/latest?q=s,0.4&sig[.sig]
       | http://quvi.sf.net/latest?q=s,0.4&csum[SHA512SUMS]
       | http://sf.net/projects/quvi/files/0.4/libquvi-scripts/[Browse])
  * http://quvi.sf.net/latest?q=l,0.4[libquvi] --
      (http://quvi.sf.net/latest?q=l,0.4&sig[.sig]
       | http://quvi.sf.net/latest?q=l,0.4&csum[SHA512SUMS]
       | http://sf.net/projects/quvi/files/0.4/libquvi/doc/[Documentation]
       | http://sf.net/projects/quvi/files/0.4/libquvi/[Browse])
  * http://quvi.sf.net/latest?q=q,0.4[quvi] --
      (http://quvi.sf.net/latest?q=q,0.4&sig[.sig]
       | http://quvi.sf.net/latest?q=q,0.4&csum[SHA512SUMS]
       | http://sf.net/projects/quvi/files/0.4/quvi/[Browse])

=== Unstable (0.9)

The 0.9 series is currently _under development_, and will gradually
mature as the next stable (1.0), replacing the 0.4 series completely.

  * http://quvi.sf.net/latest?q=s,0.9[libquvi-scripts] --
      (http://quvi.sf.net/latest?q=s,0.9&sig[.sig]
       | http://quvi.sf.net/latest?q=s,0.9&csum[SHA512SUMS]
      | http://sf.net/projects/quvi/files/0.9/libquvi-scripts/[Browse])
  * http://quvi.sf.net/latest?q=l,0.9[libquvi] --
      (http://quvi.sf.net/latest?q=l,0.9&sig[.sig]
       | http://quvi.sf.net/latest?q=l,0.9&csum[SHA512SUMS]
       | http://sf.net/projects/quvi/files/0.9/libquvi/doc/[Documentation]
       | http://sf.net/projects/quvi/files/0.9/libquvi/[Browse])
  * http://quvi.sf.net/latest?q=q,0.9[quvi] --
      (http://quvi.sf.net/latest?q=q,0.9&sig[.sig]
       | http://quvi.sf.net/latest?q=q,0.9&csum[SHA512SUMS]
       | http://sf.net/projects/quvi/files/0.9/quvi/[Browse])

The series may still see:

  * ABI and API breakages with the earlier 0.9 versions
  * Feature additions and/or removals

The 0.9 series is incompatible with the 0.4 series -- see
<<doc,Documentation>> and 'quvi-prj-ptnine(7)' for an overview

TIP: For building instructions, see the <<doc,Documentation>>

git repositories
~~~~~~~~~~~~~~~~

Each repository contains the 'maint', the 'maint-0.4', the 'next' and
the 'master' branches. See the link:contrib.html#branch[contrib] page
for more information about the existing branches.

include::shared/repo.txt[]

[[bugs]]
Reporting bugs
--------------

Report bugs to the link:mailinglist.html[quvi-devel mailing list] where
the development and the maintenance is primarily done.  You do not have
to be subscribed to the list to send a message there.  In the bug
report, include:

  * The version of 'libquvi(3)', 'libquvi-scripts(7)' and 'quvi(1)'
  * How to reproduce the bug
  * The exact text that was printed out (e.g. if a crash)
  * Anything else you think is relevant

See also link:contrib.html#patches[the contributor guidelines], if you have
written a patch.

[[doc]]
Documentation
-------------

=== libquvi(3) C API reference documentation

The documentation constains plenty of examples and tutorials, and can be
viewed online at:

  * libquvi 0.4 - (link:doc/0.4/[Browse])
  * libquvi 0.9 - (link:doc/0.9/[Browse])

Or, downloaded for viewing offline:

  * <<get, Official releases>>

Alternatively, generated from the source code:

  * For the instructions, see the 'README' file distributed with the
    source code

=== Recommended reading

* The manpages are installed by default and contain much information:
+
----
$Â man 7 libquvi-scripts
$ man 3 libquvi
$ man 1 quvi
----

* An link:doc/other/quvi-prj-ptnine.html[overview] of the changes in the
  0.9+ series -- 'quvi-prj-ptnine(7)'

* link:doc/other/howto-compile-linux.html[HOWTO: Compile 0.9+ on
  GNU/Linux] -- 'howto-compile-linux(7)'

[[prj]]
Projects using libquvi(3)
-------------------------

http://cclive.sf.net/[cclive]::
  A command line media download tool with low system footprint,
  a rewrite in C++ of http://clive.sf.net/[clive].

http://git-annex.branchable.com/[git-annex]::
  git-annex allows managing files with git, without checking the file
  contents into git.
  +
  * http://git-annex.branchable.com/tips/using_the_web_as_a_special_remote/#quvi[Using
  the web as a special remote (videos w/ quvi)].

'<<q,quvi>>'::
  The silly suite to access the flash media stream properties.

http://www.gnome.org/projects/totem/[totem]::
  Totem is the official movie player of the GNOME desktop environment
  based on GStreamer.

https://github.com/tlvince/sniffy[sniffy]::
  Monitors network traffic for media hosting websites and streams them
  in your favourite media player.

[[bind]]
libquvi(3) bindings for other languages
---------------------------------------

Python::
  https://github.com/metal3d/python-libquvi[python-libquvi]

Php::
  https://github.com/kisscool-fr/php_quvi[php_quvi]
