howto-compile-linux(7)
======================

NAME
----
howto-compile-linux - Overview of the steps to compile quvi on GNU/Linux

DESCRIPTION
-----------

This document is an overview on how to compile and install the quvi
project {libquvi-scripts, libquvi, quvi} on a GNU/Linux system.

.Notes

* This document is Debian oriented but should translate easily to other
  GNU/Linux systems

* Each project has a different set of the prerequisites, and have been
  covered in their corresponding README files under "Requirements"

* This documentation uses VPATH to confine all derived files to a single
  directory, to keep the source directories uncluttered

* These instructions were written with 0.9+ in mind, though they could
  be followed to build and install 0.4 with different {prerequisites,
  download links}

Building and installation
-------------------------

* Install the prerequisites:
+
----
$ sudo aptitude install build-essential libgcrypt11-dev libproxy-dev \
                        libcurl4-gnutls-dev liblua5.1-0-dev          \
                        libjson-glib-dev libxml2-dev
----
+
On Debian *Wheezy*:
+
----
$ sudo aptitude install lua-bitop lua-expat lua-json lua-socket
----
+
NOTE: At this time (2013-06-04), the "lua-socket" package does not
      contain the files for Lua 5.2, forcing the installation of the
      "liblua5.1-0-dev" with Wheezy
+
On Debian *Squeeze*:
+
----
$ sudo aptitude install liblua5.1-bitop0 liblua5.1-expat0 \
                        liblua5.1-json liblua5.1-socket2
----
+
NOTE: The package "libjson-glib-dev" for Squeeze is outdated and does
      not implement the features that quvi(1) uses, meaning that quvi(1)
      will be built without JsonGLib support, and cannot therefore use
      "--print-format json"

* Create a directory for building the software:
+
----
$ mkdir -p ~/build/{inst,tar}
----

* Get the official releases:
+
----
$ cd ~/build/tar/
$ curl -JLO# "http://quvi.sf.net/latest?q=s,0.9"
$ curl -JLO# "http://quvi.sf.net/latest?q=l,0.9"
$ curl -JLO# "http://quvi.sf.net/latest?q=q,0.9"
----
+
TIP: You can also use _wget --content-disposition URL_ instead of
     'curl(1)'

* Verify the downloads (optional, recommended):
+
----
$ curl -JLO# "http://quvi.sf.net/latest?q=s,0.9&sig"
$ curl -JLO# "http://quvi.sf.net/latest?q=l,0.9&sig"
$ curl -JLO# "http://quvi.sf.net/latest?q=q,0.9&sig"
$ gpg --recv-keys 0xCAC8C0A9
$ gpg --verify-files *.sig
----
+
Verify the additional checksums (for the paranoid):
+
----
$ curl -L#o SHA512SUMS.scripts "http://quvi.sf.net/latest?q=s,0.9&csum"
$ curl -L#o SHA512SUMS.quvi "http://quvi.sf.net/latest?q=q,0.9&csum"
$ curl -L#o SHA512SUMS.lib "http://quvi.sf.net/latest?q=l,0.9&csum"
$ gpg --verify-files SHA512SUMS.*
$ sha512sum -c SHA512SUMS.*
----

* Export the destination path:
+
----
$ cd ~/build/
$ export DEST=`pwd`/inst
----
+
The software will be installed to the ~/build/inst/ directory.

* Extract, compile and install libquvi-scripts:
+
----
$ tar xf tar/libquvi-scripts-0.9.*.tar.xz
$ cd libquvi-scripts-0.9.* ; mkdir tmp ; cd tmp
$ ../configure --prefix=$DEST && make install
$ cd ~/build/
----

* Extract, compile and install libquvi:
+
----
$ tar xf tar/libquvi-0.9.*.tar.xz
$ cd libquvi-0.9.* ; mkdir tmp ; cd tmp
$ PKG_CONFIG_PATH=$DEST/lib/pkgconfig/ ../configure --prefix=$DEST
$ make install
$ cd ~/build/
----

* Extract, compile and install quvi:
+
----
$ tar xf tar/quvi-0.9.*.tar.xz
$ cd quvi-0.9.* ; mkdir tmp ; cd tmp
$ PKG_CONFIG_PATH=$DEST/lib/pkgconfig/ ../configure --prefix=$DEST
$ make install
$ cd ~/build/
----

Running
-------

* The executable can be found in the 'bin' directory:
+
----
$ $DEST/bin/quvi --version
----

* Modify MANPATH so that 'man(1)' will find the installed manpages:
+
----
$ export MANPATH=$DEST/share/man/:$MANPATH
$ man 1 quvi-get
$ $DEST/bin/quvi help get
----
